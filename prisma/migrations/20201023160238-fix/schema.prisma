generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Profile {
  id        String   @id @default(uuid())
  bio       String?
  pseudonym String?
  userId    Int      @unique
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model User {
  id                Int         @id @default(autoincrement())
  authenticationkey String      @default(uuid())
  securitykey       String      @default(uuid())
  fullname          String
  secret            String?
  email             String      @unique
  cpf               String      @unique
  role              Role        @default(CANDIDATE)
  datebirth         String?
  nickname          String?     @unique
  preferencialname  String?
  createdat         DateTime    @default(now())
  updatedat         DateTime    @updatedAt
  gender            Gender
  active            Boolean     @default(true)
  Address           Address[]
  Contact           Contact[]
  Curriculum        Curriculum?
  Profile           Profile?
}

model Address {
  id         String   @id @default(uuid())
  name       String
  logradouro String
  bairro     String
  cidade     String
  cep        String
  createdat  DateTime @default(now())
  updatedat  DateTime @updatedAt
  userid     Int
  state      String?  @default("RS")
  User       User     @relation(fields: [userid], references: [id])
}

model Contact {
  id        String   @id @default(uuid())
  userid    Int
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt
  talkto    String   @default("me")
  phone     String
  User      User     @relation(fields: [userid], references: [id])
}

model Curriculum {
  id                  String   @id @default(uuid())
  userid              Int      @unique
  professionalprofile String
  createdat           DateTime @default(now())
  updatedat           DateTime @updatedAt
  User                User     @relation(fields: [userid], references: [id])
}

model Company {
  id              String   @id @default(uuid())
  name            String
  registrofederal String   @unique
  role            Role     @default(EMPLOYER)
  createdat       DateTime @default(now())
  updatedat       DateTime @updatedAt
  site            String?  @unique
  links           String[]
  labellinks      String[]
  active          Boolean  @default(true)
}

model Agency {
  id              String   @id @default(uuid())
  name            String
  registrofederal String   @unique
  role            Role     @default(VACANCYDISTRIBUTOR)
  createdat       DateTime @default(now())
  updatedat       DateTime @updatedAt
  site            String   @unique
  links           String[]
  labellinks      String[]
  active          Boolean  @default(true)
}

enum Gender {
  FEMININO
  MASCULINO
  OUTRO
}

enum Role {
  ADMIN
  CANDIDATE
  EMPLOYER
  VACANCYDISTRIBUTOR
}
